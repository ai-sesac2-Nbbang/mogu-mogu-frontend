import React, { useState } from 'react';
import { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';
import { Ionicons } from '@expo/vector-icons';
import { useNavigation } from '@react-navigation/native';

interface Notice {
  id: string;
  title: string;
  date: string;
  content: string;
  isImportant: boolean;
}

const NoticeScreen = () => {
  const navigation = useNavigation();
  const [expandedId, setExpandedId] = useState<string | null>(null);

  // Í≥µÏßÄÏÇ¨Ìï≠ ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞
  const notices: Notice[] = [
    {
      id: '1',
      title: 'üéâ Î™®Íµ¨Î™®Íµ¨ ÏÑúÎπÑÏä§ Ïò§Ìîà ÏïàÎÇ¥',
      date: '2025.10.05',
      content: 'ÏïàÎÖïÌïòÏÑ∏Ïöî, Î™®Íµ¨Î™®Íµ¨ÏûÖÎãàÎã§!\n\nÎìúÎîîÏñ¥ Ïó¨Îü¨Î∂ÑÍ≥º Ìï®ÍªòÌï† Ïàò ÏûàÍ≤å ÎêòÏñ¥ Í∏∞ÏÅ©ÎãàÎã§. Î™®Íµ¨Î™®Íµ¨Îäî Ïù¥ÏõÉÍ≥º Ìï®Íªò Í≥µÎèôÍµ¨Îß§Î•º ÌÜµÌï¥ Îçî Ï†ÄÎ†¥ÌïòÍ≤å ÏÉùÌïÑÌíàÏùÑ Íµ¨Îß§Ìï† Ïàò ÏûàÎäî ÏÑúÎπÑÏä§ÏûÖÎãàÎã§.\n\nÏ£ºÏöî Í∏∞Îä•:\n‚Ä¢ Í≥µÎèôÍµ¨Îß§ Î™®Ïßë Î∞è Ï∞∏Ïó¨\n‚Ä¢ Ïã§ÏãúÍ∞Ñ Ï±ÑÌåÖÏúºÎ°ú ÏÜåÌÜµ\n‚Ä¢ Í±∞Îûò ÌõÑÍ∏∞ ÏãúÏä§ÌÖú\n‚Ä¢ Î∞∞ÏßÄ ÌöçÎìùÏúºÎ°ú Ïã†Î¢∞ÎèÑ ÌôïÏù∏\n\nÎßéÏùÄ Ïù¥Ïö© Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§. Í∞êÏÇ¨Ìï©ÎãàÎã§!',
      isImportant: true,
    },
    {
      id: '2',
      title: 'ÏïàÏ†ÑÌïú Í±∞ÎûòÎ•º ÏúÑÌïú Í∞ÄÏù¥Îìú',
      date: '2025.10.04',
      content: 'Î™®Íµ¨Î™®Íµ¨Î•º Ïù¥Ïö©ÌïòÏãúÎäî Î™®Îì† Î∂ÑÎì§Íªò ÏïàÏ†ÑÌïú Í±∞Îûò ÌôòÍ≤ΩÏùÑ Ï†úÍ≥µÌïòÍ∏∞ ÏúÑÌï¥ Îã§Ïùå ÏÇ¨Ìï≠ÏùÑ ÏïàÎÇ¥ÎìúÎ¶ΩÎãàÎã§.\n\nÏïàÏ†Ñ Í±∞Îûò ÏàòÏπô:\n1. ÏßÅÍ±∞Îûò Ïãú Í≥µÍ≥µÏû•ÏÜåÏóêÏÑú ÎßåÎÇòÏÑ∏Ïöî\n2. ÏÉÅÌíà ÏÉÅÌÉúÎ•º ÍººÍººÌûà ÌôïÏù∏ÌïòÏÑ∏Ïöî\n3. Ï†ïÏÇ∞ÏùÄ Ìà¨Î™ÖÌïòÍ≤å ÏßÑÌñâÌïòÏÑ∏Ïöî\n4. ÏùòÏã¨Ïä§Îü¨Ïö¥ Í±∞ÎûòÎäî Ïã†Í≥†Ìï¥Ï£ºÏÑ∏Ïöî\n\nÏó¨Îü¨Î∂ÑÏùò ÏïàÏ†ÑÌïú Í±∞ÎûòÎ•º ÏúÑÌï¥ Ìï≠ÏÉÅ ÎÖ∏Î†•ÌïòÍ≤†ÏäµÎãàÎã§.',
      isImportant: true,
    },
    {
      id: '3',
      title: 'Î∞∞ÏßÄ ÏãúÏä§ÌÖú ÏóÖÎç∞Ïù¥Ìä∏',
      date: '2025.10.03',
      content: 'ÏÉàÎ°úÏö¥ Î∞∞ÏßÄ ÏãúÏä§ÌÖúÏù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§!\n\nÏù¥Ï†ú Í±∞Îûò ÌôúÎèôÏóê Îî∞Îùº Îã§ÏñëÌïú Î∞∞ÏßÄÎ•º ÌöçÎìùÌï† Ïàò ÏûàÏäµÎãàÎã§:\n‚Ä¢ Ï≤´ Í±∞Îûò: Ï≤´ Í±∞Îûò ÏôÑÎ£å Ïãú\n‚Ä¢ Î™®Íµ¨ Îã¨Ïù∏: 10Ìöå Í±∞Îûò ÏôÑÎ£å Ïãú\n‚Ä¢ ÏπúÏ†àÏôï: Ï¢ãÏùÄ ÌõÑÍ∏∞ 20Í∞ú Ïù¥ÏÉÅ\n‚Ä¢ Îπ†Î•∏ ÏÜê: ÏùëÎãµ ÏÜçÎèÑÍ∞Ä Îπ†Î•∏ Í≤ΩÏö∞\n\nÎ∞∞ÏßÄÎ•º Î™®ÏïÑÏÑú Ïã†Î¢∞ÎèÑÎ•º ÎÜíÏó¨Î≥¥ÏÑ∏Ïöî!',
      isImportant: false,
    },
    {
      id: '4',
      title: 'Ïï± ÏÇ¨Ïö© ÌåÅ - ÌÇ§ÏõåÎìú ÏïåÎ¶º ÏÑ§Ï†ï',
      date: '2025.10.02',
      content: 'ÏõêÌïòÎäî ÏÉÅÌíàÏùÑ ÎÜìÏπòÏßÄ ÎßàÏÑ∏Ïöî!\n\nÌÇ§ÏõåÎìú ÏïåÎ¶º Í∏∞Îä•ÏùÑ ÌôúÏö©ÌïòÎ©¥:\n‚Ä¢ Í¥ÄÏã¨ ÏûàÎäî ÏÉÅÌíà ÌÇ§ÏõåÎìú Îì±Î°ù\n‚Ä¢ ÏÉà Í≤åÏãúÍ∏Ä Îì±Î°ù Ïãú Ï¶âÏãú ÏïåÎ¶º\n‚Ä¢ Îπ†Î•∏ Ï∞∏Ïó¨Î°ú ÏõêÌïòÎäî ÏÉÅÌíà Íµ¨Îß§\n\nÎßàÏù¥ÌéòÏù¥ÏßÄ > ÌÇ§ÏõåÎìú Îì±Î°ùÏóêÏÑú ÏÑ§Ï†ïÌïòÏã§ Ïàò ÏûàÏäµÎãàÎã§.',
      isImportant: false,
    },
    {
      id: '5',
      title: 'Ï†ïÍ∏∞ Ï†êÍ≤Ä ÏïàÎÇ¥',
      date: '2025.10.01',
      content: 'ÏÑúÎπÑÏä§ ÌíàÏßà Ìñ•ÏÉÅÏùÑ ÏúÑÌïú Ï†ïÍ∏∞ Ï†êÍ≤ÄÏùÑ Ïã§ÏãúÌï©ÎãàÎã§.\n\nÏ†êÍ≤Ä ÏùºÏãú: Îß§Ï£º ÏàòÏöîÏùº Ïò§Ï†Ñ 2Ïãú ~ 4Ïãú\nÏ†êÍ≤Ä ÎÇ¥Ïö©: ÏÑúÎ≤Ñ ÏïàÏ†ïÌôî Î∞è Í∏∞Îä• Í∞úÏÑ†\n\nÏ†êÍ≤Ä ÏãúÍ∞ÑÏóêÎäî ÏùºÏãúÏ†ÅÏúºÎ°ú ÏÑúÎπÑÏä§ Ïù¥Ïö©Ïù¥ Ï†úÌïúÎê† Ïàò ÏûàÏäµÎãàÎã§. ÏñëÌï¥ Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§.',
      isImportant: false,
    },
  ];

  const toggleExpand = (id: string) => {
    setExpandedId(expandedId === id ? null : id);
  };

  return (
    <View style={styles.container}>
      {/* Ìó§Îçî */}
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigation.goBack()}>
          <Ionicons name="chevron-back" size={24} color="black" />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Í≥µÏßÄÏÇ¨Ìï≠</Text>
        <View style={{ width: 24 }} />
      </View>

      {/* Í≥µÏßÄÏÇ¨Ìï≠ Î™©Î°ù */}
      <ScrollView 
        contentContainerStyle={styles.content}
        showsVerticalScrollIndicator={false}
      >
        {notices.map((notice) => (
          <TouchableOpacity
            key={notice.id}
            style={[
              styles.noticeCard,
              notice.isImportant && styles.noticeCardImportant,
              expandedId === notice.id && styles.noticeCardExpanded
            ]}
            onPress={() => toggleExpand(notice.id)}
            activeOpacity={0.7}
          >
            <View style={styles.noticeHeader}>
              <View style={styles.noticeTitleRow}>
                {notice.isImportant && (
                  <View style={styles.importantBadge}>
                    <Text style={styles.importantBadgeText}>Ï§ëÏöî</Text>
                  </View>
                )}
                <Text style={styles.noticeTitle} numberOfLines={expandedId === notice.id ? undefined : 1}>
                  {notice.title}
                </Text>
              </View>
              <Ionicons 
                name={expandedId === notice.id ? "chevron-up" : "chevron-down"} 
                size={20} 
                color="#666" 
              />
            </View>
            
            <Text style={styles.noticeDate}>{notice.date}</Text>
            
            {expandedId === notice.id && (
              <View style={styles.noticeContentContainer}>
                <View style={styles.divider} />
                <Text style={styles.noticeContent}>{notice.content}</Text>
              </View>
            )}
          </TouchableOpacity>
        ))}

        {/* ÏïàÎÇ¥ Î¨∏Íµ¨ */}
        <View style={styles.infoBox}>
          <Ionicons name="information-circle-outline" size={20} color="#8A2BE2" />
          <Text style={styles.infoText}>
            Í∂ÅÍ∏àÌïú ÏÇ¨Ìï≠Ïù¥ ÏûàÏúºÏãúÎ©¥ Í≥†Í∞ùÏÑºÌÑ∞Î°ú Î¨∏ÏùòÌï¥Ï£ºÏÑ∏Ïöî.
          </Text>
        </View>
      </ScrollView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#fff',
  },
  header: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingHorizontal: 15,
    paddingTop: 50,
    paddingBottom: 15,
    borderBottomWidth: 1,
    borderBottomColor: '#f0f0f0',
    backgroundColor: '#fff',
    position: 'absolute',
    top: 0,
    left: 0,
    right: 0,
    zIndex: 10,
  },
  headerTitle: {
    fontSize: 18,
    fontWeight: 'bold',
  },
  content: {
    paddingTop: 50 + 15 + 40,
    paddingHorizontal: 15,
    paddingBottom: 20,
  },
  noticeCard: {
    backgroundColor: '#fff',
    borderRadius: 12,
    padding: 16,
    marginBottom: 12,
    borderWidth: 1,
    borderColor: '#e0e0e0',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 2,
    elevation: 2,
  },
  noticeCardImportant: {
    borderColor: '#8A2BE2',
    borderWidth: 2,
    backgroundColor: '#f9f5ff',
  },
  noticeCardExpanded: {
    backgroundColor: '#fafafa',
  },
  noticeHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'flex-start',
    marginBottom: 8,
  },
  noticeTitleRow: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1,
    marginRight: 8,
  },
  importantBadge: {
    backgroundColor: '#8A2BE2',
    paddingHorizontal: 8,
    paddingVertical: 4,
    borderRadius: 4,
    marginRight: 8,
  },
  importantBadgeText: {
    color: '#fff',
    fontSize: 11,
    fontWeight: 'bold',
  },
  noticeTitle: {
    fontSize: 16,
    fontWeight: 'bold',
    color: '#333',
    flex: 1,
  },
  noticeDate: {
    fontSize: 13,
    color: '#999',
    marginBottom: 4,
  },
  noticeContentContainer: {
    marginTop: 12,
  },
  divider: {
    height: 1,
    backgroundColor: '#e0e0e0',
    marginBottom: 12,
  },
  noticeContent: {
    fontSize: 14,
    color: '#555',
    lineHeight: 22,
  },
  infoBox: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#f0e6fa',
    padding: 15,
    borderRadius: 10,
    marginTop: 10,
  },
  infoText: {
    fontSize: 13,
    color: '#666',
    marginLeft: 8,
    flex: 1,
  },
});

export default NoticeScreen;